#include <iostream>
#include <unordered_map>
#include <string>
#include <conio.h>

using namespace std;

int romanToInt(string s) {
    unordered_map<char, int> roman = {
        {'I', 1}, {'V', 5}, {'X', 10}, {'L', 50},
        {'C', 100}, {'D', 500}, {'M', 1000}
    };

    int result = 0;
    int prev = 0; // 이전 문자의 값 저장
    int curr; // 현재 문자의 값 저장
    int repeat_count = 0; // 현재 문자가 몇 번 반복되었는지 저장

    for (char c : s) {
        curr = roman[c];

        if (prev != 0 && prev < curr) {
            // 작은 숫자가 큰 숫자의 왼쪽에 오는 경우 처리
            if ((prev == 1 && (curr == 5 || curr == 10)) ||
                (prev == 10 && (curr == 50 || curr == 100)) ||
                (prev == 100 && (curr == 500 || curr == 1000))) {
                result -= 2 * prev; // 작은 숫자의 값 2배 빼기
                repeat_count = 0; // 이전 문자가 다른 문자로 바뀌었으므로 초기화
            }
            else {
                return 0; // 잘못된 로마 숫자 입력
            }
        }

        // 현재 문자가 연속해서 사용되는 경우 처리
        if (prev == curr) {
            if (repeat_count == 2) {
                return 0; // 3번째 반복이므로 잘못된 로마 숫자 입력
            }
            repeat_count++;
        }
        else {
            repeat_count = 0; // 이전 문자가 다른 문자로 바뀌었으므로 초기화
        }

        // V, L, D는 한 번만 사용 가능
        if (c == 'V' || c == 'L' || c == 'D') {
            if (repeat_count > 0) {
                return 0; // 잘못된 로마 숫자 입력
            }
        }

        // I, X, C, M은 연속해서 3번까지만 사용 가능
        if (c == 'I' || c == 'X' || c == 'C' || c == 'M') {
            if (repeat_count > 2) {
                return 0; // 잘못된 로마 숫자 입력
            }
        }

        result += curr;
        prev = curr;
    }

    return result;
}
#include <iostream>
#include <string>

using namespace std;

bool isRomanNumeral(string s) {
    int n = s.size();
    int countI = 0, countX = 0, countC = 0, countM = 0;
    for (int i = 0; i < n; i++) {
        if (s[i] == 'I') {
            countI++;
            if (countI > 3) {
                return false;
            }
        }
        else if (s[i] == 'V') {
            if (i > 0 && s[i - 1] == 'I') {
                return false;
            }
            countI = 0;
        }
        else if (s[i] == 'X') {
            if (i > 0 && s[i - 1] == 'I') {
                countX++;
                if (countX > 3) {
                    return false;
                }
            }
            else {
                countX = 1;
            }
            countI = 0;
        }
        else if (s[i] == 'L') {
            if (i > 0 && s[i - 1] == 'X') {
                return false;
            }
            countI = 0;
            countX = 0;
        }
        else if (s[i] == 'C') {
            if (i > 0 && s[i - 1] == 'X') {
                countC++;
                if (countC > 3) {
                    return false;
                }
            }
            else {
                countC = 1;
            }
            countI = 0;
            countX = 0;
        }
        else if (s[i] == 'D') {
            if (i > 0 && s[i - 1] == 'C') {
                return false;
            }
            countI = 0;
            countX = 0;
            countC = 0;
        }
        else if (s[i] == 'M') {
            if (i > 0 && s[i - 1] == 'C') {
                countM++;
                if (countM > 3) {
                    return false;
                }
            }
            else {
                countM = 1;
            }
            countI = 0;
            countX = 0;
            countC = 0;
        }
        else {
            return false;
        }
    }
    return true;
}

int main() {
    string roman;
    int num;
    bool ch = true;
    while (true) {
        roman = ""; //저장할 string 값을 초기화
        cout << "로마 숫자를 입력하세요. (esc를 누르면 종료): ";

        while (true) {
            while (!_kbhit()) { // 키보드 입력대기
            }
            char c = _getch();  // 키보드 값을 받음
            if (c == 27) {  // esc키이면 종료
                return 0;
            }
            else if (c == 13) { // 엔터키이면 입력루프를 나가며 변환

                break;
            }
            else if (c == 8) { // 백스페이스키이면 입력지움
                cout << "\b";
                cout << " ";
                cout << "\b";
                roman.erase(roman.size() - 1);
            }
            else { // 그외 일 경우 입력된 키보드 값을 string에 저장
                cout << c;
                roman = roman + c;
            }
        }
        num = romanToInt(roman); // string의 값을 변환

        ch = isRomanNumeral(roman);

        if (num == -1 || 4000 <= num || !ch) { // 4000넘으면 에러 메세지 출력
            cout << "잘못된 입력입니다. 다시 입력해주세요." << endl;
            continue;
        }
        cout << endl;
        if (num != 0) {
            cout << "변환된 숫자: " << num << endl;
        }
        else
        {
            cout << "값을 입력해주세요" << endl;
        }
    }
    return 0;
}
