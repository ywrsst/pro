#include <iostream>
#include <string>
#include <vector>
#include <stdexcept>

using namespace std;

// 숫자에 해당하는 로마숫자를 딕셔너리(vector)로 정의합니다.
vector<pair<int, string>> romanumerals = {
    {1000, "M"},
    {900, "CM"},
    {500, "D"},
    {400, "CD"},
    {100, "C"},
    {90, "XC"},
    {50, "L"},
    {40, "XL"},
    {10, "X"},
    {9, "IX"},
    {5, "V"},
    {4, "IV"},
    {1, "I"}
};

// 주어진 숫자를 로마숫자로 변환하는 함수입니다.
string romanumeral(int n) {  //주어진 숫자 n을 로마 숫자로 변환하는 함수입니다.
    if (n < 1 || n > 3999) {
        throw invalid_argument("숫자 범위를 벗어났습니다.");  //n이 1부터 3999사이의 값이 아니면 invalid_argument 예외를 예외처리.
    }

    string result;  // result 변수에 로마 숫자를 누적
    for (auto numeral : romanumerals) {
        while (n >= numeral.first) {   //while문에서는 현재 딕셔너리 원소의 숫자에 해당하는 로마 숫자를 result에 누적합니다.                                     
            result += numeral.second;  //이 때, 현재 원소의 숫자만큼 n을 감소
            n -= numeral.first;
        }
    }
    return result;
}

int main() {
    while (true) {
        string input;  //사용자로부터 입력을 받을 변수선언.
        cout << "1부터 3999 사이의 숫자를 입력하세요 (ESC를 누르면 종료됩니다): ";
        getline(cin, input);  // cin으로부터 한 줄을 읽어온다.

        // ESC 키를 누른 경우 종료합니다.
        if (input == "ESC") {
            cout << "프로그램을 종료합니다." << endl;
            break;
        }

        // 입력받은 문자를 숫자로 변환합니다.
        try {
            int num = stoi(input);  //입력받은 문자열을 정수로 변환.
            string roman_numeral = romanumeral(num);//romanumeral 함수를 호출하여 정수를 로마숫자로 변환.
            cout << roman_numeral << endl;
        }
        catch (invalid_argument& e) {  //stoi 함수가 변환할 수 없는 문자열을 받았을 경우 실행.
            cerr << "에러: " << e.what() << endl;
        }
        catch (out_of_range& e) {     // stoi 함수가 변환 가능한 범위를 초과한 숫자를 받았을 경우 실행.
            cerr << "에러: 입력한 숫자가 너무 큽니다." << endl;
        }
    }
    return 0;
} 
